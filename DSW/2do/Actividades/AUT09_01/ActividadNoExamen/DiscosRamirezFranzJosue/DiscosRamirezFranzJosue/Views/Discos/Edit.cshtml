@using DiscosRamirezFranzJosue.Models
@model Tuple<DiscosRamirezFranzJosue.Models.Disco, IEnumerable<Interprete>>

@{
  ViewBag.Title = "Editar Disco";
  var interpreteOfDisco = ViewData["interpreteId"];
}

<h2>Editar Disco</h2>

@using (Html.BeginForm())
{

  <div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <div class="form-group">
      @Html.LabelFor(model => model.Item1.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Item1.Titulo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Item1.Titulo, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Item1.Agno, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Item1.Agno, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Item1.Agno, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group hide">
      @Html.LabelFor(model => model.Item1.IdInterprete, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.Item1.IdInterprete, Model.Item2.Select(x => new SelectListItem { Text = x.Interprete1, Value = x.IdInterprete.ToString(), Selected = x.IdInterprete == (interpreteOfDisco != null ? (int)interpreteOfDisco : 0) }),
        new { @class = "custom-select" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Guardar" class="btn btn-outline-primary" />
      </div>
    </div>
  </div>
}
